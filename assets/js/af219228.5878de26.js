"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[80052],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>y});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=d(r),m=i,y=c["".concat(p,".").concat(m)]||c[m]||u[m]||a;return r?n.createElement(y,l(l({ref:t},s),{},{components:r})):n.createElement(y,l({ref:t},s))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var d=2;d<a;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},26429:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=r(87462),i=(r(67294),r(3905));const a={id:"polygonid-js-sdk.iidentitywallet.createprofile",title:"IIdentityWallet.createProfile() method",hide_title:!0},l=void 0,o={unversionedId:"api/polygonid-js-sdk.iidentitywallet.createprofile",id:"api/polygonid-js-sdk.iidentitywallet.createprofile",title:"IIdentityWallet.createProfile() method",description:"IIdentityWallet.createProfile() method",source:"@site/docs/api/polygonid-js-sdk.iidentitywallet.createprofile.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.iidentitywallet.createprofile",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iidentitywallet.createprofile",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.iidentitywallet.createprofile",title:"IIdentityWallet.createProfile() method",hide_title:!0},sidebar:"api",previous:{title:"IIdentityWallet.createIdentity() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iidentitywallet.createidentity"},next:{title:"IIdentityWallet.generateCredentialMtp() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iidentitywallet.generatecredentialmtp"}},p={},d=[{value:"IIdentityWallet.createProfile() method",id:"iidentitywalletcreateprofile-method",level:2},{value:"Parameters",id:"parameters",level:2}],s={toc:d};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"iidentitywalletcreateprofile-method"},"IIdentityWallet.createProfile() method"),(0,i.kt)("p",null,"Creates profile based on genesis identifier"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"createProfile(did: DID, nonce: number, verifier: string): Promise<DID>;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"did"),(0,i.kt)("td",{parentName:"tr",align:null},"DID"),(0,i.kt)("td",{parentName:"tr",align:null},"identity to derive profile from")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"nonce"),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"unique integer number to generate a profile")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"verifier"),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"verifier identity/alias in a string from")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")),(0,i.kt)("p",null,"Promise","<","DID",">"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<DID>")," - profile did"))}c.isMDXComponent=!0}}]);