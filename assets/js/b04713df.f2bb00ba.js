"use strict";(self.webpackChunkjs_sdk_tutorials=self.webpackChunkjs_sdk_tutorials||[]).push([[6079],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var d=n.createContext({}),s=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(r),u=l,y=c["".concat(d,".").concat(u)]||c[u]||m[u]||a;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function y(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},17583:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var n=r(87462),l=(r(67294),r(3905));const a={id:"js-sdk.iidentitywallet.getdidtreemodel",title:"IIdentityWallet.getDIDTreeModel() method",hide_title:!0},i=void 0,o={unversionedId:"api/js-sdk.iidentitywallet.getdidtreemodel",id:"api/js-sdk.iidentitywallet.getdidtreemodel",title:"IIdentityWallet.getDIDTreeModel() method",description:"IIdentityWallet.getDIDTreeModel() method",source:"@site/docs/api/js-sdk.iidentitywallet.getdidtreemodel.md",sourceDirName:"api",slug:"/api/js-sdk.iidentitywallet.getdidtreemodel",permalink:"/docs/api/js-sdk.iidentitywallet.getdidtreemodel",draft:!1,tags:[],version:"current",frontMatter:{id:"js-sdk.iidentitywallet.getdidtreemodel",title:"IIdentityWallet.getDIDTreeModel() method",hide_title:!0},sidebar:"api",previous:{title:"IIdentityWallet.getCoreClaimFromCredential() method",permalink:"/docs/api/js-sdk.iidentitywallet.getcoreclaimfromcredential"},next:{title:"IIdentityWallet.issueCredential() method",permalink:"/docs/api/js-sdk.iidentitywallet.issuecredential"}},d={},s=[{value:"IIdentityWallet.getDIDTreeModel() method",id:"iidentitywalletgetdidtreemodel-method",level:2},{value:"Parameters",id:"parameters",level:2}],p={toc:s};function c(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"iidentitywalletgetdidtreemodel-method"},"IIdentityWallet.getDIDTreeModel() method"),(0,l.kt)("p",null,"Gets a tree model for given did that includes claims tree, revocation tree, the root of roots tree and calculated state hash"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Signature:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"getDIDTreeModel(did: DID): Promise<TreesModel>;\n")),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"did"),(0,l.kt)("td",{parentName:"tr",align:null},"DID"),(0,l.kt)("td",{parentName:"tr",align:null},"did which trees info we need to receive")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")),(0,l.kt)("p",null,"Promise","<","TreesModel",">"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Promise<TreesModel>")))}c.isMDXComponent=!0}}]);