"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[87128],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>k});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var l=a.createContext({}),p=function(t){var e=a.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},c=function(t){var e=p(t.components);return a.createElement(l.Provider,{value:e},t.children)},d="mdxType",y={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,l=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),d=p(r),u=n,k=d["".concat(l,".").concat(u)]||d[u]||y[u]||o;return r?a.createElement(k,s(s({ref:e},c),{},{components:r})):a.createElement(k,s({ref:e},c))}));function k(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,s=new Array(o);s[0]=u;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[d]="string"==typeof t?t:n,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},78943:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={id:"polygonid-js-sdk.abstractprivatekeystore",title:"AbstractPrivateKeyStore class",hide_title:!0},s=void 0,i={unversionedId:"api/polygonid-js-sdk.abstractprivatekeystore",id:"api/polygonid-js-sdk.abstractprivatekeystore",title:"AbstractPrivateKeyStore class",description:"AbstractPrivateKeyStore class",source:"@site/docs/api/polygonid-js-sdk.abstractprivatekeystore.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.abstractprivatekeystore",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.abstractprivatekeystore",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.abstractprivatekeystore",title:"AbstractPrivateKeyStore class",hide_title:!0},sidebar:"api",previous:{title:"AbstractPrivateKeyStore.import() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.abstractprivatekeystore.import"},next:{title:"AtomicQueryMTPV2Inputs.claim property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerymtpv2inputs.claim"}},l={},p=[{value:"AbstractPrivateKeyStore class",id:"abstractprivatekeystore-class",level:2},{value:"Methods",id:"methods",level:2}],c={toc:p};function d(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"abstractprivatekeystore-class"},"AbstractPrivateKeyStore class"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,n.kt)("p",null,"KeyStore that allows to import and get keys by alias."),(0,n.kt)("p",null," AbstractPrivateKeyStore"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Signature:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare abstract class AbstractPrivateKeyStore \n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Method"),(0,n.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.abstractprivatekeystore.get"},"get(args)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"abstract")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("em",{parentName:"strong"},"(BETA)"))," get key by alias"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.abstractprivatekeystore.import"},"import(args)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("code",null,"abstract")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"td"},(0,n.kt)("em",{parentName:"strong"},"(BETA)"))," imports key by alias"))))))}d.isMDXComponent=!0}}]);