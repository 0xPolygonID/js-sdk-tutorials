"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[4421],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function d(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},g="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),g=l(r),c=i,m=g["".concat(s,".").concat(c)]||g[c]||y[c]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=c;var d={};for(var s in t)hasOwnProperty.call(t,s)&&(d[s]=t[s]);d.originalType=e,d[g]="string"==typeof e?e:i,o[1]=d;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},4121:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>d,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const a={id:"polygonid-js-sdk.iidentitystorage",title:"IIdentityStorage interface",hide_title:!0},o=void 0,d={unversionedId:"api/polygonid-js-sdk.iidentitystorage",id:"api/polygonid-js-sdk.iidentitystorage",title:"IIdentityStorage interface",description:"IIdentityStorage interface",source:"@site/docs/api/polygonid-js-sdk.iidentitystorage.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.iidentitystorage",permalink:"/docs/api/polygonid-js-sdk.iidentitystorage",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.iidentitystorage",title:"IIdentityStorage interface",hide_title:!0},sidebar:"api",previous:{title:"IIdentityStorage.getProfilesByGenesisIdentifier() method",permalink:"/docs/api/polygonid-js-sdk.iidentitystorage.getprofilesbygenesisidentifier"},next:{title:"IIdentityStorage.saveIdentity() method",permalink:"/docs/api/polygonid-js-sdk.iidentitystorage.saveidentity"}},s={},l=[{value:"IIdentityStorage interface",id:"iidentitystorage-interface",level:2},{value:"Methods",id:"methods",level:2}],p={toc:l};function g(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"iidentitystorage-interface"},"IIdentityStorage interface"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,i.kt)("p",null,"storage for identities and profiles"),(0,i.kt)("p",null," IIdentityStorage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface IIdentityStorage \n")),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.getallidentities"},"getAllIdentities()")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," gets all identity from the data source")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.getidentity"},"getIdentity(identifier)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," gets identity from the the data source")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.getprofilebyid"},"getProfileById(identifier)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," gets profile by identifier")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.getprofilebyverifier"},"getProfileByVerifier(verifier)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," gets profile by verifier")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.getprofilesbygenesisidentifier"},"getProfilesByGenesisIdentifier(genesisIdentifier)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," gets profile identity by genesis identifiers")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.saveidentity"},"saveIdentity(identity)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," saves identity to the data source")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.iidentitystorage.saveprofile"},"saveProfile(profile)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("em",{parentName:"strong"},"(BETA)"))," saves profile identity to data")))))}g.isMDXComponent=!0}}]);