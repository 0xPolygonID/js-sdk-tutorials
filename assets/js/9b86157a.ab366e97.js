"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[20854],{3905:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>y});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},d=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,s=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=l(o),u=n,y=c["".concat(p,".").concat(u)]||c[u]||g[u]||s;return o?r.createElement(y,a(a({ref:t},d),{},{components:o})):r.createElement(y,a({ref:t},d))}));function y(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=o.length,a=new Array(s);a[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:n,a[1]=i;for(var l=2;l<s;l++)a[l]=o[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}u.displayName="MDXCreateElement"},79454:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=o(87462),n=(o(67294),o(3905));const s={id:"polygonid-js-sdk.proofgenerationrequestmessage",title:"ProofGenerationRequestMessage type",hide_title:!0},a=void 0,i={unversionedId:"api/polygonid-js-sdk.proofgenerationrequestmessage",id:"api/polygonid-js-sdk.proofgenerationrequestmessage",title:"ProofGenerationRequestMessage type",description:"ProofGenerationRequestMessage type",source:"@site/docs/api/polygonid-js-sdk.proofgenerationrequestmessage.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.proofgenerationrequestmessage",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.proofgenerationrequestmessage",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.proofgenerationrequestmessage",title:"ProofGenerationRequestMessage type",hide_title:!0},sidebar:"api",previous:{title:"ProofGenerationOptions.skipRevocation property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.proofgenerationoptions.skiprevocation"},next:{title:"ProofGenerationRequestMessageBody type",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.proofgenerationrequestmessagebody"}},p={},l=[{value:"ProofGenerationRequestMessage type",id:"proofgenerationrequestmessage-type",level:2}],d={toc:l};function c(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"proofgenerationrequestmessage-type"},"ProofGenerationRequestMessage type"),(0,n.kt)("p",null,"ProofGenerationRequestMessage is struct the represents body for proof generation request"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Signature:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"export type ProofGenerationRequestMessage = {\n    id: string;\n    typ?: MediaType;\n    type: ProtocolMessage;\n    thid?: string;\n    body?: ProofGenerationRequestMessageBody;\n    from?: string;\n    to?: string;\n};\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"References:")," ",(0,n.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.constants.mediatype"},"MediaType"),", ",(0,n.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.protocolmessage"},"ProtocolMessage"),", ",(0,n.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.proofgenerationrequestmessagebody"},"ProofGenerationRequestMessageBody")))}c.isMDXComponent=!0}}]);