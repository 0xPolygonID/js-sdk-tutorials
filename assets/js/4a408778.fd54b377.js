"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[7997],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),d=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=d(e.components);return n.createElement(p.Provider,{value:t},e.children)},y="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),y=d(r),k=i,g=y["".concat(p,".").concat(k)]||y[k]||s[k]||a;return r?n.createElement(g,o(o({ref:t},m),{},{components:r})):n.createElement(g,o({ref:t},m))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[y]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},2934:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const a={id:"polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype",title:"InMemoryMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method",hide_title:!0},o=void 0,l={unversionedId:"api/polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype",id:"api/polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype",title:"InMemoryMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method",description:"InMemoryMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method",source:"@site/docs/api/polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype",permalink:"/docs/api/polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.inmemorymerkletreestorage.getmerkletreebyidentifierandtype",title:"InMemoryMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method",hide_title:!0},sidebar:"api",previous:{title:"InMemoryMerkleTreeStorage.getIdentityMerkleTreesInfo() method",permalink:"/docs/api/polygonid-js-sdk.inmemorymerkletreestorage.getidentitymerkletreesinfo"},next:{title:"InMemoryMerkleTreeStorage class",permalink:"/docs/api/polygonid-js-sdk.inmemorymerkletreestorage"}},p={},d=[{value:"InMemoryMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method",id:"inmemorymerkletreestoragegetmerkletreebyidentifierandtype-method",level:2},{value:"Parameters",id:"parameters",level:2}],m={toc:d};function y(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"inmemorymerkletreestoragegetmerkletreebyidentifierandtype-method"},"InMemoryMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,i.kt)("p",null,"get merkle tree by identifier and type from memory"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"getMerkleTreeByIdentifierAndType(identifier: string, mtType: MerkleTreeType): Promise<Merkletree>;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"identifier"),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"mtType"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/polygonid-js-sdk.merkletreetype"},"MerkleTreeType")),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")),(0,i.kt)("p",null,"Promise","<","Merkletree",">"))}y.isMDXComponent=!0}}]);