"use strict";(self.webpackChunkjs_sdk_tutorials=self.webpackChunkjs_sdk_tutorials||[]).push([[66140],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,k=p["".concat(d,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[p]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},96993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={id:"js-sdk.icredentialwallet.findnonrevokedcredential",title:"ICredentialWallet.findNonRevokedCredential() method",hide_title:!0},l=void 0,o={unversionedId:"api/js-sdk.icredentialwallet.findnonrevokedcredential",id:"api/js-sdk.icredentialwallet.findnonrevokedcredential",title:"ICredentialWallet.findNonRevokedCredential() method",description:"ICredentialWallet.findNonRevokedCredential() method",source:"@site/docs/api/js-sdk.icredentialwallet.findnonrevokedcredential.md",sourceDirName:"api",slug:"/api/js-sdk.icredentialwallet.findnonrevokedcredential",permalink:"/docs/api/js-sdk.icredentialwallet.findnonrevokedcredential",draft:!1,tags:[],version:"current",frontMatter:{id:"js-sdk.icredentialwallet.findnonrevokedcredential",title:"ICredentialWallet.findNonRevokedCredential() method",hide_title:!0},sidebar:"api",previous:{title:"ICredentialWallet.findByQuery() method",permalink:"/docs/api/js-sdk.icredentialwallet.findbyquery"},next:{title:"ICredentialWallet.getAuthBJJCredential() method",permalink:"/docs/api/js-sdk.icredentialwallet.getauthbjjcredential"}},d={},c=[{value:"ICredentialWallet.findNonRevokedCredential() method",id:"icredentialwalletfindnonrevokedcredential-method",level:2},{value:"Parameters",id:"parameters",level:2}],s={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"icredentialwalletfindnonrevokedcredential-method"},"ICredentialWallet.findNonRevokedCredential() method"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,a.kt)("p",null,"Finds non-revoked credential from a given list by resolving their credential status"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"findNonRevokedCredential(creds: W3CCredential[]): Promise<{\n        cred: W3CCredential;\n        revStatus: RevocationStatus;\n    }>;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"creds"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/api/js-sdk.w3ccredential"},"W3CCredential"),"[","]"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns:")),(0,a.kt)("p",null,"Promise","<","{ cred: ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/js-sdk.w3ccredential"},"W3CCredential"),"; revStatus: ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/js-sdk.revocationstatus"},"RevocationStatus"),"; }",">"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"{Promise<{ cred: W3CCredential; revStatus: RevocationStatus; }>")," not revoked credential and it's revocation status"))}p.isMDXComponent=!0}}]);