"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[5530],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>u});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),l=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=l(e.components);return n.createElement(d.Provider,{value:r},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},c=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),y=l(t),c=o,u=y["".concat(d,".").concat(c)]||y[c]||m[c]||i;return t?n.createElement(u,a(a({ref:r},s),{},{components:t})):n.createElement(u,a({ref:r},s))}));function u(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=c;var p={};for(var d in r)hasOwnProperty.call(r,d)&&(p[d]=r[d]);p.originalType=e,p[y]="string"==typeof e?e:o,a[1]=p;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4228:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const i={id:"polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed",title:"IKeyProvider.newPrivateKeyFromSeed() method",hide_title:!0},a=void 0,p={unversionedId:"api/polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed",id:"api/polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed",title:"IKeyProvider.newPrivateKeyFromSeed() method",description:"IKeyProvider.newPrivateKeyFromSeed() method",source:"@site/docs/api/polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed",permalink:"/docs/api/polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.ikeyprovider.newprivatekeyfromseed",title:"IKeyProvider.newPrivateKeyFromSeed() method",hide_title:!0},sidebar:"api",previous:{title:"IKeyProvider interface",permalink:"/docs/api/polygonid-js-sdk.ikeyprovider"},next:{title:"IKeyProvider.publicKey() method",permalink:"/docs/api/polygonid-js-sdk.ikeyprovider.publickey"}},d={},l=[{value:"IKeyProvider.newPrivateKeyFromSeed() method",id:"ikeyprovidernewprivatekeyfromseed-method",level:2},{value:"Parameters",id:"parameters",level:2}],s={toc:l};function y(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"ikeyprovidernewprivatekeyfromseed-method"},"IKeyProvider.newPrivateKeyFromSeed() method"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("p",null,"creates new key pair from given seed"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"newPrivateKeyFromSeed(seed: Uint8Array): Promise<KmsKeyId>;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"seed"),(0,o.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,o.kt)("td",{parentName:"tr",align:null},"seed")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")),(0,o.kt)("p",null,"Promise","<",(0,o.kt)("a",{parentName:"p",href:"/docs/api/polygonid-js-sdk.kmskeyid"},"KmsKeyId"),">"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Promise<KmsKeyId>")))}y.isMDXComponent=!0}}]);