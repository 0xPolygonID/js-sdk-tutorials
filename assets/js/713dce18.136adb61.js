"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[16901],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=i.createContext({}),l=function(e){var t=i.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return i.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=l(r),m=n,y=c["".concat(p,".").concat(m)]||c[m]||d[m]||a;return r?i.createElement(y,s(s({ref:t},u),{},{components:r})):i.createElement(y,s({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:n,s[1]=o;for(var l=2;l<a;l++)s[l]=r[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},80799:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=r(87462),n=(r(67294),r(3905));const a={id:"polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate",title:"AtomicQueryMTPV2PubSignals.issuerClaimIdenState property",hide_title:!0},s=void 0,o={unversionedId:"api/polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate",id:"api/polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate",title:"AtomicQueryMTPV2PubSignals.issuerClaimIdenState property",description:"AtomicQueryMTPV2PubSignals.issuerClaimIdenState property",source:"@site/docs/api/polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimidenstate",title:"AtomicQueryMTPV2PubSignals.issuerClaimIdenState property",hide_title:!0},sidebar:"api",previous:{title:"AtomicQueryMTPV2PubSignals.isRevocationChecked property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerymtpv2pubsignals.isrevocationchecked"},next:{title:"AtomicQueryMTPV2PubSignals.issuerClaimNonRevState property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerymtpv2pubsignals.issuerclaimnonrevstate"}},p={},l=[{value:"AtomicQueryMTPV2PubSignals.issuerClaimIdenState property",id:"atomicquerymtpv2pubsignalsissuerclaimidenstate-property",level:2}],u={toc:l};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"atomicquerymtpv2pubsignalsissuerclaimidenstate-property"},"AtomicQueryMTPV2PubSignals.issuerClaimIdenState property"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Signature:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"issuerClaimIdenState?: Hash;\n")))}c.isMDXComponent=!0}}]);