"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[67736],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(n),c=a,m=p["".concat(l,".").concat(c)]||p[c]||h[c]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},68737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(87462),a=(n(67294),n(3905));const o={id:"polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid",title:"IAuthHandler.handleAuthorizationRequestForGenesisDID() method",hide_title:!0},i=void 0,s={unversionedId:"api/polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid",id:"api/polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid",title:"IAuthHandler.handleAuthorizationRequestForGenesisDID() method",description:"IAuthHandler.handleAuthorizationRequestForGenesisDID() method",source:"@site/docs/api/polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.iauthhandler.handleauthorizationrequestforgenesisdid",title:"IAuthHandler.handleAuthorizationRequestForGenesisDID() method",hide_title:!0},sidebar:"api",previous:{title:"IAuthHandler.generateAuthorizationResponse() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iauthhandler.generateauthorizationresponse"},next:{title:"IAuthHandler interface",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iauthhandler"}},l={},d=[{value:"IAuthHandler.handleAuthorizationRequestForGenesisDID() method",id:"iauthhandlerhandleauthorizationrequestforgenesisdid-method",level:2},{value:"Parameters",id:"parameters",level:2}],u={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"iauthhandlerhandleauthorizationrequestforgenesisdid-method"},"IAuthHandler.handleAuthorizationRequestForGenesisDID() method"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,a.kt)("p",null,"Handle authorization request protocol message"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"handleAuthorizationRequestForGenesisDID(did: DID, request: Uint8Array): Promise<{\n        token: string;\n        authRequest: AuthorizationRequestMessage;\n        authResponse: AuthorizationResponseMessage;\n    }>;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"did"),(0,a.kt)("td",{parentName:"tr",align:null},"DID"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"request"),(0,a.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,a.kt)("td",{parentName:"tr",align:null},"request payload")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns:")),(0,a.kt)("p",null,"Promise","<","{ token: string; authRequest: ",(0,a.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.authorizationrequestmessage"},"AuthorizationRequestMessage"),"; authResponse: ",(0,a.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.authorizationresponsemessage"},"AuthorizationResponseMessage"),"; }",">"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Promise<{ token: string; authRequest: AuthorizationRequestMessage; authResponse: AuthorizationResponseMessage; }>")))}p.isMDXComponent=!0}}]);