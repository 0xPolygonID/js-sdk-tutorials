"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[99378],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),d=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=d(e.components);return n.createElement(p.Provider,{value:r},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(t),u=o,m=c["".concat(p,".").concat(u)]||c[u]||f[u]||i;return t?n.createElement(m,a(a({ref:r},s),{},{components:t})):n.createElement(m,a({ref:r},s))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=t[d];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},79987:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=t(87462),o=(t(67294),t(3905));const i={id:"polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof",title:"W3CCredential.getIden3SparseMerkleTreeProof() method",hide_title:!0},a=void 0,l={unversionedId:"api/polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof",id:"api/polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof",title:"W3CCredential.getIden3SparseMerkleTreeProof() method",description:"W3CCredential.getIden3SparseMerkleTreeProof() method",source:"@site/docs/api/polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.w3ccredential.getiden3sparsemerkletreeproof",title:"W3CCredential.getIden3SparseMerkleTreeProof() method",hide_title:!0},sidebar:"api",previous:{title:"W3CCredential.getCoreClaimFromProof() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.w3ccredential.getcoreclaimfromproof"},next:{title:"W3CCredential.id property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.w3ccredential.id"}},p={},d=[{value:"W3CCredential.getIden3SparseMerkleTreeProof() method",id:"w3ccredentialgetiden3sparsemerkletreeproof-method",level:2}],s={toc:d};function c(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"w3ccredentialgetiden3sparsemerkletreeproof-method"},"W3CCredential.getIden3SparseMerkleTreeProof() method"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("p",null,"checks Iden3SparseMerkleTreeProof in W3C VC"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Signature:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"getIden3SparseMerkleTreeProof(): Iden3SparseMerkleTreeProof | undefined;\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.iden3sparsemerkletreeproof"},"Iden3SparseMerkleTreeProof")," ","|"," undefined"),(0,o.kt)("p",null,"{","*","} {(Iden3SparseMerkleTreeProof ","|"," undefined)}"))}c.isMDXComponent=!0}}]);