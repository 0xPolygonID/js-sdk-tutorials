"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[9103],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(r),k=i,y=c["".concat(s,".").concat(k)]||c[k]||m[k]||a;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function y(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=k;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},6514:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const a={id:"polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees",title:"IMerkleTreeStorage.createIdentityMerkleTrees() method",hide_title:!0},o=void 0,l={unversionedId:"api/polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees",id:"api/polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees",title:"IMerkleTreeStorage.createIdentityMerkleTrees() method",description:"IMerkleTreeStorage.createIdentityMerkleTrees() method",source:"@site/docs/api/polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.imerkletreestorage.createidentitymerkletrees",title:"IMerkleTreeStorage.createIdentityMerkleTrees() method",hide_title:!0},sidebar:"api",previous:{title:"IMerkleTreeStorage.bindMerkleTreeToNewIdentifier() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.imerkletreestorage.bindmerkletreetonewidentifier"},next:{title:"IMerkleTreeStorage.getMerkleTreeByIdentifierAndType() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.imerkletreestorage.getmerkletreebyidentifierandtype"}},s={},d=[{value:"IMerkleTreeStorage.createIdentityMerkleTrees() method",id:"imerkletreestoragecreateidentitymerkletrees-method",level:2},{value:"Parameters",id:"parameters",level:2}],p={toc:d};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"imerkletreestoragecreateidentitymerkletrees-method"},"IMerkleTreeStorage.createIdentityMerkleTrees() method"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,i.kt)("p",null,"creates merkle tree in the storage"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Signature:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"createIdentityMerkleTrees(identifier: string): Promise<IdentityMerkleTreeMetaInformation[]>;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"identifier"),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")),(0,i.kt)("p",null,"Promise","<",(0,i.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.identitymerkletreemetainformation"},"IdentityMerkleTreeMetaInformation"),"[","]",">"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise<IdentityMerkleTreeMetaInformation[]>")))}c.isMDXComponent=!0}}]);