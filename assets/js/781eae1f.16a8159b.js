"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[94924],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},g="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=u(n),m=a,d=g["".concat(o,".").concat(m)]||g[m]||c[m]||i;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[g]="string"==typeof e?e:a,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},33093:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={id:"polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal",title:"AtomicQuerySigV2PubSignals.pubSignalsUnmarshal() method",hide_title:!0},s=void 0,l={unversionedId:"api/polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal",id:"api/polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal",title:"AtomicQuerySigV2PubSignals.pubSignalsUnmarshal() method",description:"AtomicQuerySigV2PubSignals.pubSignalsUnmarshal() method",source:"@site/docs/api/polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.atomicquerysigv2pubsignals.pubsignalsunmarshal",title:"AtomicQuerySigV2PubSignals.pubSignalsUnmarshal() method",hide_title:!0},sidebar:"api",previous:{title:"AtomicQuerySigV2PubSignals.operator property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerysigv2pubsignals.operator"},next:{title:"AtomicQuerySigV2PubSignals.requestID property",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerysigv2pubsignals.requestid"}},o={},u=[{value:"AtomicQuerySigV2PubSignals.pubSignalsUnmarshal() method",id:"atomicquerysigv2pubsignalspubsignalsunmarshal-method",level:2},{value:"Parameters",id:"parameters",level:2}],p={toc:u};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"atomicquerysigv2pubsignalspubsignalsunmarshal-method"},"AtomicQuerySigV2PubSignals.pubSignalsUnmarshal() method"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,a.kt)("p",null,"PubSignalsUnmarshal unmarshal credentialAtomicQuerySig.circom public signals array to AtomicQuerySugPubSignals"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Signature:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"pubSignalsUnmarshal(data: Uint8Array): AtomicQuerySigV2PubSignals;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"data"),(0,a.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns:")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.atomicquerysigv2pubsignals"},"AtomicQuerySigV2PubSignals")),(0,a.kt)("p",null,"AtomicQuerySigV2PubSignals"))}g.isMDXComponent=!0}}]);