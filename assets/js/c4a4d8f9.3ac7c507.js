"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[40282],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>u});var n=t(67294);function p(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){p(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,p=function(e,r){if(null==e)return{};var t,n,p={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(p[t]=e[t]);return p}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(p[t]=e[t])}return p}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},k=n.forwardRef((function(e,r){var t=e.components,p=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(t),k=p,u=d["".concat(s,".").concat(k)]||d[k]||m[k]||a;return t?n.createElement(u,o(o({ref:r},l),{},{components:t})):n.createElement(u,o({ref:r},l))}));function u(e,r){var t=arguments,p=r&&r.mdxType;if("string"==typeof e||p){var a=t.length,o=new Array(a);o[0]=k;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[d]="string"==typeof e?e:p,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},67223:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=t(87462),p=(t(67294),t(3905));const a={id:"polygonid-js-sdk.zkppacker.provingparamsmap",title:"ZKPPacker.provingParamsMap property",hide_title:!0},o=void 0,i={unversionedId:"api/polygonid-js-sdk.zkppacker.provingparamsmap",id:"api/polygonid-js-sdk.zkppacker.provingparamsmap",title:"ZKPPacker.provingParamsMap property",description:"ZKPPacker.provingParamsMap property",source:"@site/docs/api/polygonid-js-sdk.zkppacker.provingparamsmap.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.zkppacker.provingparamsmap",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.zkppacker.provingparamsmap",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.zkppacker.provingparamsmap",title:"ZKPPacker.provingParamsMap property",hide_title:!0},sidebar:"api",previous:{title:"ZKPPacker.pack() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.zkppacker.pack"},next:{title:"ZKPPacker.unpack() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.zkppacker.unpack"}},s={},c=[{value:"ZKPPacker.provingParamsMap property",id:"zkppackerprovingparamsmap-property",level:2}],l={toc:c};function d(e){let{components:r,...t}=e;return(0,p.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"zkppackerprovingparamsmap-property"},"ZKPPacker.provingParamsMap property"),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,p.kt)("p",null,(0,p.kt)("strong",{parentName:"p"},"Signature:")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-typescript"},"provingParamsMap: Map<string, ProvingParams>;\n")))}d.isMDXComponent=!0}}]);