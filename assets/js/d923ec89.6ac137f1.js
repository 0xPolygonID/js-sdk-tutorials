"use strict";(self.webpackChunkpolygonid_js_sdk_website=self.webpackChunkpolygonid_js_sdk_website||[]).push([[16307],{3905:(e,a,t)=>{t.d(a,{Zo:()=>l,kt:()=>g});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},l=function(e){var a=c(e.components);return n.createElement(s.Provider,{value:a},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,p=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,g=d["".concat(s,".").concat(u)]||d[u]||k[u]||p;return t?n.createElement(g,o(o({ref:a},l),{},{components:t})):n.createElement(g,o({ref:a},l))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var p=t.length,o=new Array(p);o[0]=u;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<p;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},25446:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>p,metadata:()=>i,toc:()=>c});var n=t(87462),r=(t(67294),t(3905));const p={id:"polygonid-js-sdk.ipackagemanager.unpack",title:"IPackageManager.unpack() method",hide_title:!0},o=void 0,i={unversionedId:"api/polygonid-js-sdk.ipackagemanager.unpack",id:"api/polygonid-js-sdk.ipackagemanager.unpack",title:"IPackageManager.unpack() method",description:"IPackageManager.unpack() method",source:"@site/docs/api/polygonid-js-sdk.ipackagemanager.unpack.md",sourceDirName:"api",slug:"/api/polygonid-js-sdk.ipackagemanager.unpack",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.ipackagemanager.unpack",draft:!1,tags:[],version:"current",frontMatter:{id:"polygonid-js-sdk.ipackagemanager.unpack",title:"IPackageManager.unpack() method",hide_title:!0},sidebar:"api",previous:{title:"IPackageManager.registerPackers() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.ipackagemanager.registerpackers"},next:{title:"IPackageManager.unpackWithType() method",permalink:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.ipackagemanager.unpackwithtype"}},s={},c=[{value:"IPackageManager.unpack() method",id:"ipackagemanagerunpack-method",level:2},{value:"Parameters",id:"parameters",level:2}],l={toc:c};function d(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"ipackagemanagerunpack-method"},"IPackageManager.unpack() method"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,r.kt)("p",null,"unpacks packed envelope to basic protocol message and returns media type of the envelope"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Signature:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"unpack(envelope: Uint8Array): Promise<{\n        unpackedMessage: BasicMessage;\n        unpackedMediaType: MediaType;\n    }>;\n")),(0,r.kt)("h2",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"envelope"),(0,r.kt)("td",{parentName:"tr",align:null},"Uint8Array"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes envelope")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns:")),(0,r.kt)("p",null,"Promise","<","{ unpackedMessage: ",(0,r.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.basicmessage"},"BasicMessage"),"; unpackedMediaType: ",(0,r.kt)("a",{parentName:"p",href:"/polygonid-js-sdk-website/docs/api/polygonid-js-sdk.constants.mediatype"},"MediaType"),"; }",">"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise<{ unpackedMessage: BasicMessage; unpackedMediaType: MediaType }")))}d.isMDXComponent=!0}}]);